export const abi = [
  {
    "type": "function",
    "name": "addOwner",
    "inputs": [
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "ownerKeyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "eip712Domain",
    "inputs": [],
    "outputs": [
      {
        "name": "fields",
        "type": "bytes1",
        "internalType": "bytes1"
      },
      {
        "name": "name",
        "type": "string",
        "internalType": "string"
      },
      {
        "name": "version",
        "type": "string",
        "internalType": "string"
      },
      {
        "name": "chainId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "verifyingContract",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "salt",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "extensions",
        "type": "uint256[]",
        "internalType": "uint256[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getConfig",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [
      {
        "name": "threshold",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "ownerKeyHashes",
        "type": "bytes32[]",
        "internalType": "bytes32[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "initConfig",
    "inputs": [
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "threshold",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "ownerKeyHashes",
        "type": "bytes32[]",
        "internalType": "bytes32[]"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "isValidSignatureWithKeyHash",
    "inputs": [
      {
        "name": "digest",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "signature",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "magicValue",
        "type": "bytes4",
        "internalType": "bytes4"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "removeOwner",
    "inputs": [
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "ownerKeyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setThreshold",
    "inputs": [
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "threshold",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "error",
    "name": "ConfigAlreadySet",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidKeyHash",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidThreshold",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OwnerNotFound",
    "inputs": []
  }
] as const;

export const code = "0x6080604052348015600e575f5ffd5b50610c808061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061007a575f3560e01c806384b0196e1161005857806384b0196e146100d05780638afc93b414610131578063a4db7b4d1461015d578063aa32d86b14610170575f5ffd5b806301faf36c1461007e5780632aca9072146100a85780632d2156b9146100bd575b5f5ffd5b61009161008c36600461075f565b610183565b60405161009f929190610794565b60405180910390f35b6100bb6100b63660046107e1565b61021f565b005b6100bb6100cb3660046107e1565b61033f565b604080518082018252600e81526d26bab63a34a9b4b3a9b4b3b732b960911b602080830191909152825180840184526005815264302e302e3160d81b8183015283515f8082529281019485905261009f94600f60f81b94934692309261082f565b61014461013f366004610931565b610377565b6040516001600160e01b0319909116815260200161009f565b6100bb61016b3660046107e1565b610586565b6100bb61017e3660046109e0565b6105d8565b6001600160a01b0382165f90815260208181526040808320848452825280832081518083018352815481526001820180548451818702810187019095528085526060958795939493858201939092909183018282801561020057602002820191905f5260205f20905b8154815260200190600101908083116101ec575b5050509190925250508151602090920151919791965090945050505050565b6102288261067b565b335f9081526020818152604080832085845290915281206001810180549192909190805b828110156102ec578584828154811061026757610267610a85565b905f5260205f200154036102e45783610281600185610aad565b8154811061029157610291610a85565b905f5260205f2001548482815481106102ac576102ac610a85565b905f5260205f200181905550838054806102c8576102c8610ac6565b600190038181905f5260205f20015f90559055600191506102ec565b60010161024c565b508061030b5760405163ae4575cd60e01b815260040160405180910390fd5b8354610318600184610aad565b10156103375760405163aabd5a0960e01b815260040160405180910390fd5b505050505050565b6103488261067b565b335f90815260208181526040808320948352938152928120600190810180549182018155825292902090910155565b5f5f8280602001905181019061038d9190610ada565b335f90815260208181526040808320888452825280832081518083018352815481526001820180548451818702810187019095528085529697509495909491938581019392919083018282801561040157602002820191905f5260205f20905b8154815260200190600101908083116103ed575b50505050508152505090505f5f5b835181101561056f575f5f336001600160a01b0316630cef73b48b88868151811061043c5761043c610a85565b60200260200101516040518363ffffffff1660e01b8152600401610461929190610bcb565b6040805180830381865afa15801561047b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049f9190610beb565b91509150816104af575050610567565b5f5b85602001515181101561053f5781866020015182815181106104d5576104d5610a85565b60200260200101510361053757846104ec81610c1b565b9550505f5f1b8660200151828151811061050857610508610a85565b60209081029190910101528551850361053257506322bf24ed60e21b965061057f95505050505050565b61053f565b6001016104b1565b856020015151810361056357506001600160e01b0319965061057f95505050505050565b5050505b60010161040f565b506001600160e01b031993505050505b9392505050565b61058f8261067b565b335f9081526020818152604080832085845290915290208115806105b65750600181015482115b156105d45760405163aabd5a0960e01b815260040160405180910390fd5b5550565b815f036105f85760405163aabd5a0960e01b815260040160405180910390fd5b335f90815260208181526040808320868452909152902080541561062f5760405163c7c5196560e01b815260040160405180910390fd5b6040805180820182528481526020808201858152335f90815280835284812089825283529390932082518155925180519293926106729260018501920190610702565b50505050505050565b5f336001600160a01b031663be766d156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106dc9190610c33565b90508181146106fe576040516381255f6d60e01b815260040160405180910390fd5b5050565b828054828255905f5260205f2090810192821561073b579160200282015b8281111561073b578251825591602001919060010190610720565b5061074792915061074b565b5090565b5b80821115610747575f815560010161074c565b5f5f60408385031215610770575f5ffd5b82356001600160a01b0381168114610786575f5ffd5b946020939093013593505050565b5f60408201848352604060208401528084518083526060850191506020860192505f5b818110156107d55783518352602093840193909201916001016107b7565b50909695505050505050565b5f5f604083850312156107f2575f5ffd5b50508035926020909101359150565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e060208201525f61084d60e0830189610801565b828103604084015261085f8189610801565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b818110156108b4578351835260209384019390920191600101610896565b50909b9a5050505050505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610902576109026108c5565b604052919050565b5f67ffffffffffffffff821115610923576109236108c5565b50601f01601f191660200190565b5f5f5f60608486031215610943575f5ffd5b8335925060208401359150604084013567ffffffffffffffff811115610967575f5ffd5b8401601f81018613610977575f5ffd5b803561098a6109858261090a565b6108d9565b81815287602083850101111561099e575f5ffd5b816020840160208301375f602083830101528093505050509250925092565b5f67ffffffffffffffff8211156109d6576109d66108c5565b5060051b60200190565b5f5f5f606084860312156109f2575f5ffd5b8335925060208401359150604084013567ffffffffffffffff811115610a16575f5ffd5b8401601f81018613610a26575f5ffd5b8035610a34610985826109bd565b8082825260208201915060208360051b850101925088831115610a55575f5ffd5b6020840193505b82841015610a77578335825260209384019390910190610a5c565b809450505050509250925092565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610ac057610ac0610a99565b92915050565b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215610aea575f5ffd5b815167ffffffffffffffff811115610b00575f5ffd5b8201601f81018413610b10575f5ffd5b8051610b1e610985826109bd565b8082825260208201915060208360051b850101925086831115610b3f575f5ffd5b602084015b83811015610bc057805167ffffffffffffffff811115610b62575f5ffd5b8501603f81018913610b72575f5ffd5b6020810151610b836109858261090a565b8181526040838301018b1015610b97575f5ffd5b8160408401602083015e5f60208383010152808652505050602083019250602081019050610b44565b509695505050505050565b828152604060208201525f610be36040830184610801565b949350505050565b5f5f60408385031215610bfc575f5ffd5b82518015158114610c0b575f5ffd5b6020939093015192949293505050565b5f60018201610c2c57610c2c610a99565b5060010190565b5f60208284031215610c43575f5ffd5b505191905056fea2646970667358221220394231fd88d5a2768dad5e4e7dfbce527741d474551c8445bde5729725c3217c64736f6c634300081d0033" as const;

