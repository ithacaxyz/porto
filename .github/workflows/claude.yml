name: Claude PR Assistant

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned, labeled]
  pull_request_review:
    types: [submitted]

jobs:
  check-permissions:
    runs-on: ubuntu-latest
    outputs:
      has-permission: ${{ steps.check.outputs.has-permission }}
    steps:
      - name: Check if user has write permissions
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const { data: permission } = await github.rest.repos.getCollaboratorPermissionLevel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: context.actor
              });
              
              const hasWritePermission = ['admin', 'maintain', 'write'].includes(permission.permission);
              console.log(`User ${context.actor} has permission: ${permission.permission}`);
              core.setOutput('has-permission', hasWritePermission);
              return hasWritePermission;
            } catch (error) {
              console.log(`Error checking permissions for ${context.actor}: ${error.message}`);
              core.setOutput('has-permission', false);
              return false;
            }

  claude-code-action:
    needs: check-permissions
    if: |
      needs.check-permissions.outputs.has-permission == 'true' && (
        (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
        (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.labels.*.name, 'claude-action')))
      )
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude PR Action
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "60"