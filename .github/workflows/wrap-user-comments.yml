name: Update Bot PR Comments
on:
  issue_comment:
    types: [created]

env:
  TARGET_USERNAME: 'claude'

jobs:
  wrap-comment:
    # Only run on pull request comments
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    permissions:
      pull-requests: write
      issues: write
    
    steps:
      - name: Check if comment is from specific user
        id: check-user
        env:
          COMMENT_USER: ${{ github.event.comment.user.login }}
          TARGET_USER: ${{ env.TARGET_USERNAME }}
        run: |
          if [ "$COMMENT_USER" = "$TARGET_USER" ]; then
            echo "should_wrap=true" >> $GITHUB_OUTPUT
          else
            echo "should_wrap=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Wrap comment in details
        if: steps.check-user.outputs.should_wrap == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = context.payload.comment
            const body = comment.body
            const targetUser = process.env.TARGET_USERNAME
            
            // More robust check for existing details tags
            if (body.includes('<details>') && body.includes('</details>')) {
              console.log('Comment appears to already contain details tags')
              return
            }
            
            // Wrap the comment with proper formatting
            const wrappedBody = `<details><summary>${targetUser} Comment</summary>${body}</details>`
            
            try {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id,
                body: wrappedBody
              })
              console.log('Comment wrapped successfully')
            } catch (error) {
              console.error('Failed to wrap comment:', error.message)
              process.exit(1)
            }
