#!/usr/bin/env tsx

import { spawnSync } from 'node:child_process'
import { resolve } from 'node:path'

const result = spawnSync('forge', ['selectors', 'list'], {
  cwd: resolve(import.meta.dirname, '../../../contracts/account'),
  encoding: 'utf-8',
})

const errors: Record<string, string> = {}

for (const line of result.stdout.split('\n')) {
  if (!line.includes('| Error')) continue
  const parts = line.split('|').map((p) => p.trim())
  if (parts.length < 4) continue
  const [, , signature, selector] = parts
  if (!signature || !selector || !selector.startsWith('0x')) continue
  const [name] = signature.split('(')
  if (name) errors[selector] = name
}

console.log(`// this file has been generated by scripts/generate-error-selectors.ts

import type { Hex } from 'viem'

export const errorSelectors: Record<Hex, string> = {
${Object.entries(errors)
  .sort(([a], [b]) => a.localeCompare(b))
  .map(([selector, name]) => `  '${selector}': '${name}',`)
  .join('\n')}
} as const
`)
