/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/_index'
import { Route as PlaygroundRouteImport } from './routes/playground'
import { Route as IndexIndexRouteImport } from './routes/_index/index'
import { Route as IndexRecoveryRouteImport } from './routes/_index/recovery'
import { Route as IndexAboutRouteImport } from './routes/_index/about'
import { Route as IndexEmailVerifyRouteImport } from './routes/_index/email.verify'
import { ServerRoute as HealthServerRouteImport } from './routes/health'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/_index',
  getParentRoute: () => rootRouteImport,
} as any)
const PlaygroundRoute = PlaygroundRouteImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexIndexRoute = IndexIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => IndexRoute,
} as any)
const IndexRecoveryRoute = IndexRecoveryRouteImport.update({
  id: '/recovery',
  path: '/recovery',
  getParentRoute: () => IndexRoute,
} as any)
const IndexAboutRoute = IndexAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => IndexRoute,
} as any)
const IndexEmailVerifyRoute = IndexEmailVerifyRouteImport.update({
  id: '/email/verify',
  path: '/email/verify',
  getParentRoute: () => IndexRoute,
} as any)
const HealthServerRoute = HealthServerRouteImport.update({
  id: '/health',
  path: '/health',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/playground': typeof PlaygroundRoute
  '/about': typeof IndexAboutRoute
  '/recovery': typeof IndexRecoveryRoute
  '/': typeof IndexIndexRoute
  '/email/verify': typeof IndexEmailVerifyRoute
}
export interface FileRoutesByTo {
  '/playground': typeof PlaygroundRoute
  '/about': typeof IndexAboutRoute
  '/recovery': typeof IndexRecoveryRoute
  '/': typeof IndexIndexRoute
  '/email/verify': typeof IndexEmailVerifyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_index': typeof IndexRouteWithChildren
  '/playground': typeof PlaygroundRoute
  '/_index/about': typeof IndexAboutRoute
  '/_index/recovery': typeof IndexRecoveryRoute
  '/_index/': typeof IndexIndexRoute
  '/_index/email/verify': typeof IndexEmailVerifyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/playground' | '/about' | '/recovery' | '/' | '/email/verify'
  fileRoutesByTo: FileRoutesByTo
  to: '/playground' | '/about' | '/recovery' | '/' | '/email/verify'
  id:
    | '__root__'
    | '/_index'
    | '/playground'
    | '/_index/about'
    | '/_index/recovery'
    | '/_index/'
    | '/_index/email/verify'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRouteWithChildren
  PlaygroundRoute: typeof PlaygroundRoute
}
export interface FileServerRoutesByFullPath {
  '/health': typeof HealthServerRoute
}
export interface FileServerRoutesByTo {
  '/health': typeof HealthServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/health': typeof HealthServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/health'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/health'
  id: '__root__' | '/health'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  HealthServerRoute: typeof HealthServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_index': {
      id: '/_index'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/playground': {
      id: '/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_index/': {
      id: '/_index/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexIndexRouteImport
      parentRoute: typeof IndexRoute
    }
    '/_index/recovery': {
      id: '/_index/recovery'
      path: '/recovery'
      fullPath: '/recovery'
      preLoaderRoute: typeof IndexRecoveryRouteImport
      parentRoute: typeof IndexRoute
    }
    '/_index/about': {
      id: '/_index/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof IndexAboutRouteImport
      parentRoute: typeof IndexRoute
    }
    '/_index/email/verify': {
      id: '/_index/email/verify'
      path: '/email/verify'
      fullPath: '/email/verify'
      preLoaderRoute: typeof IndexEmailVerifyRouteImport
      parentRoute: typeof IndexRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/health': {
      id: '/health'
      path: '/health'
      fullPath: '/health'
      preLoaderRoute: typeof HealthServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface IndexRouteChildren {
  IndexAboutRoute: typeof IndexAboutRoute
  IndexRecoveryRoute: typeof IndexRecoveryRoute
  IndexIndexRoute: typeof IndexIndexRoute
  IndexEmailVerifyRoute: typeof IndexEmailVerifyRoute
}

const IndexRouteChildren: IndexRouteChildren = {
  IndexAboutRoute: IndexAboutRoute,
  IndexRecoveryRoute: IndexRecoveryRoute,
  IndexIndexRoute: IndexIndexRoute,
  IndexEmailVerifyRoute: IndexEmailVerifyRoute,
}

const IndexRouteWithChildren = IndexRoute._addFileChildren(IndexRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRouteWithChildren,
  PlaygroundRoute: PlaygroundRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  HealthServerRoute: HealthServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
