/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PlaygroundRouteImport } from './routes/playground'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout.index'
import { Route as LayoutRecoveryRouteImport } from './routes/_layout.recovery'
import { Route as LayoutAboutRouteImport } from './routes/_layout.about'
import { Route as LayoutEmailVerifyRouteImport } from './routes/_layout.email.verify'

const PlaygroundRoute = PlaygroundRouteImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutRecoveryRoute = LayoutRecoveryRouteImport.update({
  id: '/recovery',
  path: '/recovery',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAboutRoute = LayoutAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutEmailVerifyRoute = LayoutEmailVerifyRouteImport.update({
  id: '/email/verify',
  path: '/email/verify',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/playground': typeof PlaygroundRoute
  '/about': typeof LayoutAboutRoute
  '/recovery': typeof LayoutRecoveryRoute
  '/': typeof LayoutIndexRoute
  '/email/verify': typeof LayoutEmailVerifyRoute
}
export interface FileRoutesByTo {
  '/playground': typeof PlaygroundRoute
  '/about': typeof LayoutAboutRoute
  '/recovery': typeof LayoutRecoveryRoute
  '/': typeof LayoutIndexRoute
  '/email/verify': typeof LayoutEmailVerifyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/playground': typeof PlaygroundRoute
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/recovery': typeof LayoutRecoveryRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/email/verify': typeof LayoutEmailVerifyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/playground' | '/about' | '/recovery' | '/' | '/email/verify'
  fileRoutesByTo: FileRoutesByTo
  to: '/playground' | '/about' | '/recovery' | '/' | '/email/verify'
  id:
    | '__root__'
    | '/_layout'
    | '/playground'
    | '/_layout/about'
    | '/_layout/recovery'
    | '/_layout/'
    | '/_layout/email/verify'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  PlaygroundRoute: typeof PlaygroundRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/playground': {
      id: '/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/recovery': {
      id: '/_layout/recovery'
      path: '/recovery'
      fullPath: '/recovery'
      preLoaderRoute: typeof LayoutRecoveryRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/email/verify': {
      id: '/_layout/email/verify'
      path: '/email/verify'
      fullPath: '/email/verify'
      preLoaderRoute: typeof LayoutEmailVerifyRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutRecoveryRoute: typeof LayoutRecoveryRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutEmailVerifyRoute: typeof LayoutEmailVerifyRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutRecoveryRoute: LayoutRecoveryRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutEmailVerifyRoute: LayoutEmailVerifyRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  PlaygroundRoute: PlaygroundRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
