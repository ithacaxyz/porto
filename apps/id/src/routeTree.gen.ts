/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PlaygroundImport } from './routes/playground'
import { Route as AuthImport } from './routes/auth'
import { Route as AboutImport } from './routes/about'
import { Route as DashImport } from './routes/_dash'
import { Route as DashIndexImport } from './routes/_dash/index'
import { Route as DashSavingsImport } from './routes/_dash/savings'
import { Route as DashReceiveImport } from './routes/_dash/receive'
import { Route as DashAssetsImport } from './routes/_dash/assets'
import { Route as DashActivityImport } from './routes/_dash/activity'
import { Route as DashSettingsIndexImport } from './routes/_dash/settings/index'
import { Route as DashSettingsRecoveryImport } from './routes/_dash/settings/recovery'

// Create/Update Routes

const PlaygroundRoute = PlaygroundImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const DashRoute = DashImport.update({
  id: '/_dash',
  getParentRoute: () => rootRoute,
} as any)

const DashIndexRoute = DashIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashRoute,
} as any)

const DashSavingsRoute = DashSavingsImport.update({
  id: '/savings',
  path: '/savings',
  getParentRoute: () => DashRoute,
} as any)

const DashReceiveRoute = DashReceiveImport.update({
  id: '/receive',
  path: '/receive',
  getParentRoute: () => DashRoute,
} as any)

const DashAssetsRoute = DashAssetsImport.update({
  id: '/assets',
  path: '/assets',
  getParentRoute: () => DashRoute,
} as any)

const DashActivityRoute = DashActivityImport.update({
  id: '/activity',
  path: '/activity',
  getParentRoute: () => DashRoute,
} as any)

const DashSettingsIndexRoute = DashSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashRoute,
} as any)

const DashSettingsRecoveryRoute = DashSettingsRecoveryImport.update({
  id: '/settings/recovery',
  path: '/settings/recovery',
  getParentRoute: () => DashRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dash': {
      id: '/_dash'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/playground': {
      id: '/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundImport
      parentRoute: typeof rootRoute
    }
    '/_dash/activity': {
      id: '/_dash/activity'
      path: '/activity'
      fullPath: '/activity'
      preLoaderRoute: typeof DashActivityImport
      parentRoute: typeof DashImport
    }
    '/_dash/assets': {
      id: '/_dash/assets'
      path: '/assets'
      fullPath: '/assets'
      preLoaderRoute: typeof DashAssetsImport
      parentRoute: typeof DashImport
    }
    '/_dash/receive': {
      id: '/_dash/receive'
      path: '/receive'
      fullPath: '/receive'
      preLoaderRoute: typeof DashReceiveImport
      parentRoute: typeof DashImport
    }
    '/_dash/savings': {
      id: '/_dash/savings'
      path: '/savings'
      fullPath: '/savings'
      preLoaderRoute: typeof DashSavingsImport
      parentRoute: typeof DashImport
    }
    '/_dash/': {
      id: '/_dash/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/settings/recovery': {
      id: '/_dash/settings/recovery'
      path: '/settings/recovery'
      fullPath: '/settings/recovery'
      preLoaderRoute: typeof DashSettingsRecoveryImport
      parentRoute: typeof DashImport
    }
    '/_dash/settings/': {
      id: '/_dash/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashSettingsIndexImport
      parentRoute: typeof DashImport
    }
  }
}

// Create and export the route tree

interface DashRouteChildren {
  DashActivityRoute: typeof DashActivityRoute
  DashAssetsRoute: typeof DashAssetsRoute
  DashReceiveRoute: typeof DashReceiveRoute
  DashSavingsRoute: typeof DashSavingsRoute
  DashIndexRoute: typeof DashIndexRoute
  DashSettingsRecoveryRoute: typeof DashSettingsRecoveryRoute
  DashSettingsIndexRoute: typeof DashSettingsIndexRoute
}

const DashRouteChildren: DashRouteChildren = {
  DashActivityRoute: DashActivityRoute,
  DashAssetsRoute: DashAssetsRoute,
  DashReceiveRoute: DashReceiveRoute,
  DashSavingsRoute: DashSavingsRoute,
  DashIndexRoute: DashIndexRoute,
  DashSettingsRecoveryRoute: DashSettingsRecoveryRoute,
  DashSettingsIndexRoute: DashSettingsIndexRoute,
}

const DashRouteWithChildren = DashRoute._addFileChildren(DashRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof DashRouteWithChildren
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/playground': typeof PlaygroundRoute
  '/activity': typeof DashActivityRoute
  '/assets': typeof DashAssetsRoute
  '/receive': typeof DashReceiveRoute
  '/savings': typeof DashSavingsRoute
  '/': typeof DashIndexRoute
  '/settings/recovery': typeof DashSettingsRecoveryRoute
  '/settings': typeof DashSettingsIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/playground': typeof PlaygroundRoute
  '/activity': typeof DashActivityRoute
  '/assets': typeof DashAssetsRoute
  '/receive': typeof DashReceiveRoute
  '/savings': typeof DashSavingsRoute
  '/': typeof DashIndexRoute
  '/settings/recovery': typeof DashSettingsRecoveryRoute
  '/settings': typeof DashSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dash': typeof DashRouteWithChildren
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/playground': typeof PlaygroundRoute
  '/_dash/activity': typeof DashActivityRoute
  '/_dash/assets': typeof DashAssetsRoute
  '/_dash/receive': typeof DashReceiveRoute
  '/_dash/savings': typeof DashSavingsRoute
  '/_dash/': typeof DashIndexRoute
  '/_dash/settings/recovery': typeof DashSettingsRecoveryRoute
  '/_dash/settings/': typeof DashSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/auth'
    | '/playground'
    | '/activity'
    | '/assets'
    | '/receive'
    | '/savings'
    | '/'
    | '/settings/recovery'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/auth'
    | '/playground'
    | '/activity'
    | '/assets'
    | '/receive'
    | '/savings'
    | '/'
    | '/settings/recovery'
    | '/settings'
  id:
    | '__root__'
    | '/_dash'
    | '/about'
    | '/auth'
    | '/playground'
    | '/_dash/activity'
    | '/_dash/assets'
    | '/_dash/receive'
    | '/_dash/savings'
    | '/_dash/'
    | '/_dash/settings/recovery'
    | '/_dash/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashRoute: typeof DashRouteWithChildren
  AboutRoute: typeof AboutRoute
  AuthRoute: typeof AuthRoute
  PlaygroundRoute: typeof PlaygroundRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashRoute: DashRouteWithChildren,
  AboutRoute: AboutRoute,
  AuthRoute: AuthRoute,
  PlaygroundRoute: PlaygroundRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dash",
        "/about",
        "/auth",
        "/playground"
      ]
    },
    "/_dash": {
      "filePath": "_dash.tsx",
      "children": [
        "/_dash/activity",
        "/_dash/assets",
        "/_dash/receive",
        "/_dash/savings",
        "/_dash/",
        "/_dash/settings/recovery",
        "/_dash/settings/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/playground": {
      "filePath": "playground.tsx"
    },
    "/_dash/activity": {
      "filePath": "_dash/activity.tsx",
      "parent": "/_dash"
    },
    "/_dash/assets": {
      "filePath": "_dash/assets.tsx",
      "parent": "/_dash"
    },
    "/_dash/receive": {
      "filePath": "_dash/receive.tsx",
      "parent": "/_dash"
    },
    "/_dash/savings": {
      "filePath": "_dash/savings.tsx",
      "parent": "/_dash"
    },
    "/_dash/": {
      "filePath": "_dash/index.tsx",
      "parent": "/_dash"
    },
    "/_dash/settings/recovery": {
      "filePath": "_dash/settings/recovery.tsx",
      "parent": "/_dash"
    },
    "/_dash/settings/": {
      "filePath": "_dash/settings/index.tsx",
      "parent": "/_dash"
    }
  }
}
ROUTE_MANIFEST_END */
