/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PlaygroundRouteImport } from './routes/playground'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AboutRouteImport } from './routes/about'
import { Route as DashRouteImport } from './routes/_dash'
import { Route as DashIndexRouteImport } from './routes/_dash/index'
import { Route as EmailVerifyRouteImport } from './routes/email.verify'
import { Route as DashSavingsRouteImport } from './routes/_dash/savings'
import { Route as DashReceiveRouteImport } from './routes/_dash/receive'
import { Route as DashAssetsRouteImport } from './routes/_dash/assets'
import { Route as DashActivityRouteImport } from './routes/_dash/activity'
import { Route as DashSettingsIndexRouteImport } from './routes/_dash/settings/index'
import { Route as DashSettingsRecoveryRouteImport } from './routes/_dash/settings/recovery'
import { Route as DashSettingsPermissionsRouteImport } from './routes/_dash/settings/permissions'

const PlaygroundRoute = PlaygroundRouteImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const DashRoute = DashRouteImport.update({
  id: '/_dash',
  getParentRoute: () => rootRouteImport,
} as any)
const DashIndexRoute = DashIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashRoute,
} as any)
const EmailVerifyRoute = EmailVerifyRouteImport.update({
  id: '/email/verify',
  path: '/email/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const DashSavingsRoute = DashSavingsRouteImport.update({
  id: '/savings',
  path: '/savings',
  getParentRoute: () => DashRoute,
} as any)
const DashReceiveRoute = DashReceiveRouteImport.update({
  id: '/receive',
  path: '/receive',
  getParentRoute: () => DashRoute,
} as any)
const DashAssetsRoute = DashAssetsRouteImport.update({
  id: '/assets',
  path: '/assets',
  getParentRoute: () => DashRoute,
} as any)
const DashActivityRoute = DashActivityRouteImport.update({
  id: '/activity',
  path: '/activity',
  getParentRoute: () => DashRoute,
} as any)
const DashSettingsIndexRoute = DashSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashRoute,
} as any)
const DashSettingsRecoveryRoute = DashSettingsRecoveryRouteImport.update({
  id: '/settings/recovery',
  path: '/settings/recovery',
  getParentRoute: () => DashRoute,
} as any)
const DashSettingsPermissionsRoute = DashSettingsPermissionsRouteImport.update({
  id: '/settings/permissions',
  path: '/settings/permissions',
  getParentRoute: () => DashRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/playground': typeof PlaygroundRoute
  '/activity': typeof DashActivityRoute
  '/assets': typeof DashAssetsRoute
  '/receive': typeof DashReceiveRoute
  '/savings': typeof DashSavingsRoute
  '/email/verify': typeof EmailVerifyRoute
  '/': typeof DashIndexRoute
  '/settings/permissions': typeof DashSettingsPermissionsRoute
  '/settings/recovery': typeof DashSettingsRecoveryRoute
  '/settings': typeof DashSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/playground': typeof PlaygroundRoute
  '/activity': typeof DashActivityRoute
  '/assets': typeof DashAssetsRoute
  '/receive': typeof DashReceiveRoute
  '/savings': typeof DashSavingsRoute
  '/email/verify': typeof EmailVerifyRoute
  '/': typeof DashIndexRoute
  '/settings/permissions': typeof DashSettingsPermissionsRoute
  '/settings/recovery': typeof DashSettingsRecoveryRoute
  '/settings': typeof DashSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_dash': typeof DashRouteWithChildren
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/playground': typeof PlaygroundRoute
  '/_dash/activity': typeof DashActivityRoute
  '/_dash/assets': typeof DashAssetsRoute
  '/_dash/receive': typeof DashReceiveRoute
  '/_dash/savings': typeof DashSavingsRoute
  '/email/verify': typeof EmailVerifyRoute
  '/_dash/': typeof DashIndexRoute
  '/_dash/settings/permissions': typeof DashSettingsPermissionsRoute
  '/_dash/settings/recovery': typeof DashSettingsRecoveryRoute
  '/_dash/settings/': typeof DashSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/auth'
    | '/playground'
    | '/activity'
    | '/assets'
    | '/receive'
    | '/savings'
    | '/email/verify'
    | '/'
    | '/settings/permissions'
    | '/settings/recovery'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/auth'
    | '/playground'
    | '/activity'
    | '/assets'
    | '/receive'
    | '/savings'
    | '/email/verify'
    | '/'
    | '/settings/permissions'
    | '/settings/recovery'
    | '/settings'
  id:
    | '__root__'
    | '/_dash'
    | '/about'
    | '/auth'
    | '/playground'
    | '/_dash/activity'
    | '/_dash/assets'
    | '/_dash/receive'
    | '/_dash/savings'
    | '/email/verify'
    | '/_dash/'
    | '/_dash/settings/permissions'
    | '/_dash/settings/recovery'
    | '/_dash/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashRoute: typeof DashRouteWithChildren
  AboutRoute: typeof AboutRoute
  AuthRoute: typeof AuthRoute
  PlaygroundRoute: typeof PlaygroundRoute
  EmailVerifyRoute: typeof EmailVerifyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/playground': {
      id: '/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dash': {
      id: '/_dash'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dash/': {
      id: '/_dash/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashIndexRouteImport
      parentRoute: typeof DashRoute
    }
    '/email/verify': {
      id: '/email/verify'
      path: '/email/verify'
      fullPath: '/email/verify'
      preLoaderRoute: typeof EmailVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dash/savings': {
      id: '/_dash/savings'
      path: '/savings'
      fullPath: '/savings'
      preLoaderRoute: typeof DashSavingsRouteImport
      parentRoute: typeof DashRoute
    }
    '/_dash/receive': {
      id: '/_dash/receive'
      path: '/receive'
      fullPath: '/receive'
      preLoaderRoute: typeof DashReceiveRouteImport
      parentRoute: typeof DashRoute
    }
    '/_dash/assets': {
      id: '/_dash/assets'
      path: '/assets'
      fullPath: '/assets'
      preLoaderRoute: typeof DashAssetsRouteImport
      parentRoute: typeof DashRoute
    }
    '/_dash/activity': {
      id: '/_dash/activity'
      path: '/activity'
      fullPath: '/activity'
      preLoaderRoute: typeof DashActivityRouteImport
      parentRoute: typeof DashRoute
    }
    '/_dash/settings/': {
      id: '/_dash/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashSettingsIndexRouteImport
      parentRoute: typeof DashRoute
    }
    '/_dash/settings/recovery': {
      id: '/_dash/settings/recovery'
      path: '/settings/recovery'
      fullPath: '/settings/recovery'
      preLoaderRoute: typeof DashSettingsRecoveryRouteImport
      parentRoute: typeof DashRoute
    }
    '/_dash/settings/permissions': {
      id: '/_dash/settings/permissions'
      path: '/settings/permissions'
      fullPath: '/settings/permissions'
      preLoaderRoute: typeof DashSettingsPermissionsRouteImport
      parentRoute: typeof DashRoute
    }
  }
}

interface DashRouteChildren {
  DashActivityRoute: typeof DashActivityRoute
  DashAssetsRoute: typeof DashAssetsRoute
  DashReceiveRoute: typeof DashReceiveRoute
  DashSavingsRoute: typeof DashSavingsRoute
  DashIndexRoute: typeof DashIndexRoute
  DashSettingsPermissionsRoute: typeof DashSettingsPermissionsRoute
  DashSettingsRecoveryRoute: typeof DashSettingsRecoveryRoute
  DashSettingsIndexRoute: typeof DashSettingsIndexRoute
}

const DashRouteChildren: DashRouteChildren = {
  DashActivityRoute: DashActivityRoute,
  DashAssetsRoute: DashAssetsRoute,
  DashReceiveRoute: DashReceiveRoute,
  DashSavingsRoute: DashSavingsRoute,
  DashIndexRoute: DashIndexRoute,
  DashSettingsPermissionsRoute: DashSettingsPermissionsRoute,
  DashSettingsRecoveryRoute: DashSettingsRecoveryRoute,
  DashSettingsIndexRoute: DashSettingsIndexRoute,
}

const DashRouteWithChildren = DashRoute._addFileChildren(DashRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  DashRoute: DashRouteWithChildren,
  AboutRoute: AboutRoute,
  AuthRoute: AuthRoute,
  PlaygroundRoute: PlaygroundRoute,
  EmailVerifyRoute: EmailVerifyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
